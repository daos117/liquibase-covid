modeltime_accuracy()
table1 <- calibration_table %>%
modeltime_accuracy()
table1[mae:rsq]
table1[table1$mae:table1$rsq]
table1[table1$mae:table1$rsq,]
table1[,table1$mae:table1$rsq]
table1$mae:table1$rsq
calibration_table %>%
modeltime_accuracy() %>%
pivot_longer(!.model_desc, names_to = "metricas", values_to = "value")
calibration_table %>%
modeltime_accuracy() %>%
select(-.model_id)
calibration_table %>%
modeltime_accuracy() %>%
select(-.model_id, -.type)
calibration_table %>%
modeltime_accuracy() %>%
select(-.model_id, -.type) %>%
pivot_longer(!.model_desc, names_to = "metricas", values_to = "value")
calibration_table %>%
modeltime_accuracy() %>%
select(-.model_id, -.type) %>%
pivot_longer(!.model_desc, names_to = "metricas", values_to = "value") %>%
group_by(.model_desc)
mutate(mean = mean())
calibration_table %>%
modeltime_accuracy() %>%
select(-.model_id, -.type) %>%
pivot_longer(!.model_desc, names_to = "metricas", values_to = "value") %>%
group_by(.model_desc) %>%
mutate(mean = mean())
calibration_table %>%
modeltime_accuracy() %>%
select(-.model_id, -.type) %>%
pivot_longer(!.model_desc, names_to = "metricas", values_to = "value") %>%
group_by(.model_desc) %>%
mutate(mean = mean(value))
calibration_table %>%
modeltime_accuracy() %>%
select(-.model_id, -.type) %>%
pivot_longer(!.model_desc, names_to = "metricas", values_to = "value") %>%
group_by(.model_desc) %>%
mutate(mean = mean(value)) %>%
pivot_wider(names_from = .model_desc, values_from = mean)
calibration_table %>%
modeltime_accuracy() %>%
select(-.model_id, -.type) %>%
pivot_longer(!.model_desc, names_to = "metricas", values_to = "value") %>%
group_by(.model_desc) %>%
mutate(mean = mean(value)) %>%
select(-metricas)
calibration_table %>%
modeltime_accuracy() %>%
select(-.model_id, -.type) %>%
pivot_longer(!.model_desc, names_to = "metricas", values_to = "value") %>%
group_by(.model_desc) %>%
mutate(mean = mean(value)) %>%
select(-metricas, -value)
calibration_table %>%
modeltime_accuracy() %>%
select(-.model_id, -.type) %>%
pivot_longer(!.model_desc, names_to = "metricas", values_to = "value") %>%
group_by(.model_desc) %>%
mutate(mean = mean(value)) %>%
select(-metricas, -value) %>%
pivot_wider(names_from = .model_desc, values_from = mean)
calibration_table %>%
modeltime_accuracy() %>%
select(-.model_id, -.type) %>%
pivot_longer(!.model_desc, names_to = "metricas", values_to = "value") %>%
group_by(.model_desc) %>%
mutate(mean = mean(value)) %>%
select(-metricas) %>%
pivot_wider(names_from = .model_desc, values_from = mean)
calibration_table %>%
modeltime_accuracy() %>%
select(-.model_id, -.type) %>%
pivot_longer(!.model_desc, names_to = "metricas", values_to = "value") %>%
group_by(.model_desc) %>%
mutate(mean = mean(value)) %>%
select(-metricas, -value) %>%
pivot_wider(names_from = .model_desc, values_from = mean)
calibration_table %>%
modeltime_accuracy() %>%
select(-.model_id, -.type) %>%
pivot_longer(!.model_desc, names_to = "metricas", values_to = "value")
calibration_table %>%
modeltime_accuracy() %>%
select(-.model_id, -.type)
calibration_table %>%
modeltime_accuracy() %>%
select(-.model_id, -.type) %>%
pivot_longer(!.model_desc, names_to = "metricas", values_to = "value") %>%
group_by(.model_desc) %>%
mutate(mean = mean(value)) %>%
# select(-metricas, -value) %>%
pivot_wider(names_from = .model_desc, values_from = mean)
calibration_table %>%
modeltime_accuracy() %>%
select(-.model_id, -.type) %>%
pivot_longer(!.model_desc, names_to = "metricas", values_to = "value") %>%
group_by(.model_desc) %>%
mutate(mean = mean(value)) %>%
# select(-metricas, -value) %>%
pivot_wider(names_from = mean, values_from = .model_desc)
calibration_table %>%
modeltime_accuracy()
calibration_table %>%
modeltime_accuracy() %>%
mutate(mean = mae)
calibration_table %>%
modeltime_accuracy() %>%
mutate(mean = mae+mape)
calibration_table %>%
modeltime_accuracy() %>%
mutate(mean = mean(mae))
calibration_table %>%
modeltime_accuracy() %>%
mutate(mean = mean(mae+mape))
calibration_table %>%
modeltime_accuracy() %>%
mutate(mean = sum(mae+mape))
calibration_table %>%
modeltime_accuracy() %>%
rowwise()
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape)))
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq)))
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq))) %>%
arrange()
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq))) %>%
arrange(mean)
calibration_table %>%
modeltime_accuracy() %>%
table_modeltime_accuracy(.interactive = F)
calibration_table %>%
modeltime_accuracy() %>%
group_by(.model_desc) %>%
mutate(mean = mean(mae + mape + mase + smape + rmse + rsq, na.rm = TRUE))
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq))) %>%
arrange(mean)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq))) %>%
arrange(mean) %>%
table_modeltime_accuracy(.interactive = F)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq)), na.rm=TRUE) %>%
arrange(mean) %>%
table_modeltime_accuracy(.interactive = F) %>%
slice_head(n=4)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq)), na.rm=TRUE) %>%
arrange(mean) %>%
slice_head(n=4)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
slice_head(n=4)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
slice_head(n=4)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
slice_head(n=3)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
slice_tail(n=3)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
slice(n=3)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
dplyr::slice_head(n=3)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
dplyr::slice_head(n(3))
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
dplyr::slice(n(3))
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
dplyr::slice(n())
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
dplyr::slice(3:n())
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
dplyr::slice(n():2)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
dplyr::slice((1:3))
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
dplyr::slice_min(mean, n=3)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE))
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
dplyr::slice_min(mean, n=3)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
dplyr::slice_min("mean", n=3)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
slice_sample("mean", n=3)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
slice_sample(n=3)
seq(1:6)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
mutate(id = seq(1:6))
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
mutate(n_id = seq(1:6))
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
mutate(n_id = c(1:6))
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
group_by(.model_desc)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
group_by(.model_desc) %>%
mutate(n_id = c(1:6))
seq(1:6)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
group_by(.model_desc) %>%
mutate(n_id = (1:6))
rep(1:6,6)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
group_by(.model_desc) %>%
mutate(n_id = rep(1:6, 6))
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
group_by(.model_desc) %>%
mutate(n_id = 1)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
column_to_rownames()
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
mutate(n_id = 1)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
mutate(n_id = 1:6)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
mutate(n_id = as.numeric(.model_id))
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
filter(.model_id)
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
mutate(n_id = as.numeric(.model_id))
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
mutate(n_id = as.numeric(.type))
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
mutate(n_id = as.numeric(.model_desc))
calibration_table %>%
modeltime_accuracy() %>%
rowwise() %>%
mutate(mean = mean(c(mae,mape, mase, smape, rmse, rsq), na.rm=TRUE)) %>%
arrange(mean) %>%
mutate(n_id = as.numeric(as.character(mae)))
calibration_table %>%
modeltime_accuracy() %>%
table_modeltime_accuracy(.interactive = F)
library(tidyverse)  #install.packages("tidyverse")
url_covid <- 'https://datos.covid-19.conacyt.mx/Downloads/Files/Casos_Diarios_Estado_Nacional_Confirmados_20211006.csv'
data <- read.csv(url_covid, header = TRUE)
data <- data %>%
select(-cve_ent, -poblacion) %>%
pivot_longer(!nombre, names_to = "fecha", values_to = "confirmados") %>%
pivot_wider(names_from = nombre, values_from = confirmados) %>%
mutate(fecha = gsub("X", "", fecha)) %>%
mutate(fecha = as.Date(fecha, "%d.%m.%Y"))
if (any(is.na(data)) == TRUE) {data = na.omit(data)}  # TRUE = hay al menos un valor NA
aguascalientes <- ts(data[2],
start = c(2020, as.numeric(format(data$fecha[1], "%j"))),
frequency = 365)
plot(aguascalientes)
library(tidyverse)  #install.packages("tidyverse")
url_covid <- 'https://datos.covid-19.conacyt.mx/Downloads/Files/Casos_Diarios_Estado_Nacional_Confirmados_20211006.csv'
head(data)
url_covid <- 'https://datos.covid-19.conacyt.mx/Downloads/Files/Casos_Diarios_Estado_Nacional_Confirmados_20211006.csv'
head(data)
data <- read.csv(url_covid, header = TRUE)
head(data)
View(data)
dim(data)
str(data)
names(data)
data %>%
select(-cve_ent, -poblacion)
data %>%
select(-cve_ent, -poblacion) %>%
pivot_longer(!nombre, names_to = "fecha", values_to = "confirmados")
data %>%
select(-cve_ent, -poblacion) %>%
pivot_longer(!nombre, names_to = "fecha", values_to = "confirmados") %>%
pivot_wider(names_from = nombre, values_from = confirmados)
data %>%
select(-cve_ent, -poblacion) %>%
pivot_longer(!nombre, names_to = "fecha", values_to = "confirmados") %>%
pivot_wider(names_from = nombre, values_from = confirmados) %>%
mutate(fecha = gsub("X", "", fecha))
data %>%
select(-cve_ent, -poblacion) %>%
pivot_longer(!nombre, names_to = "fecha", values_to = "confirmados") %>%
pivot_wider(names_from = nombre, values_from = confirmados) %>%
mutate(fecha = gsub("X", "", fecha)) %>%
mutate(fecha = as.Date(fecha, "%d.%m.%Y"))
data <- data %>%
select(-cve_ent, -poblacion) %>%
pivot_longer(!nombre, names_to = "fecha", values_to = "confirmados") %>%
pivot_wider(names_from = nombre, values_from = confirmados) %>%
mutate(fecha = gsub("X", "", fecha)) %>%
mutate(fecha = as.Date(fecha, "%d.%m.%Y"))
is.na(data)
any(is.na(data))
head(data)
View(data)
data[2]
format(data$fecha[1], "%j"))
format(data$fecha[1], "%j")
data$fecha[1]
as.numeric(format(data$fecha[1], "%j")))
as.numeric(format(data$fecha[1], "%j"))
as.numeric(format(data$fecha[1], "%j"))
aguascalientes <- ts(data[2],
start = c(2020, as.numeric(format(data$fecha[1], "%j"))),
frequency = 365)
plot(aguascalientes)
url_covid <- 'https://datos.covid-19.conacyt.mx/Downloads/Files/Casos_Diarios_Estado_Nacional_Confirmados_20211006.csv'
data <- read.csv(url_covid, header = TRUE)
View(data)
data %>%
select(-cve_ent, -poblacion)
data %>%
select(-cve_ent, -poblacion) %>%
pivot_longer(!nombre, names_to = "fecha", values_to = "confirmados")
data %>%
select(-cve_ent, -poblacion) %>%
pivot_longer(!nombre, names_to = "fecha", values_to = "confirmados") %>%
pivot_wider(names_from = nombre, values_from = confirmados)
data %>%
select(-cve_ent, -poblacion) %>%
pivot_longer(!nombre, names_to = "fecha", values_to = "confirmados") %>%
pivot_wider(names_from = nombre, values_from = confirmados) %>%
mutate(fecha = gsub("X", "", fecha))
data %>%
select(-cve_ent, -poblacion) %>%
pivot_longer(!nombre, names_to = "fecha", values_to = "confirmados") %>%
pivot_wider(names_from = nombre, values_from = confirmados) %>%
mutate(fecha = gsub("X", "", fecha)) %>%
mutate(fecha = as.Date(fecha, "%d.%m.%Y"))
data <- data %>%
select(-cve_ent, -poblacion) %>%
pivot_longer(!nombre, names_to = "fecha", values_to = "confirmados") %>%
pivot_wider(names_from = nombre, values_from = confirmados) %>%
mutate(fecha = gsub("X", "", fecha)) %>%
mutate(fecha = as.Date(fecha, "%d.%m.%Y"))
is.na(data)
any(is.na(data))
if (any(is.na(data)) == TRUE) {data = na.omit(data)}  # TRUE = hay al menos un valor NA
data[2]
as.numeric(format(data$fecha[1], "%j"))
data$fecha[1]
format(data$fecha[1], "%j")
as.numeric(format(data$fecha[1], "%j"))
aguascalientes <- ts(data[2],
start = c(2020, as.numeric(format(data$fecha[1], "%j"))),
frequency = 365)
plot(aguascalientes)
data <- read.csv("C:/Users/David/OneDrive/Documentos/DAOS curses/Datalab SDC4/demo 1/liquibase-covid/code daos/confirmados.csv", header = TRUE)
data <- data %>%
mutate(fecha = as.Date(fecha))
ts.agu <- ts(data[2],
start = c(2020, as.numeric(format(data$fecha[1], "%j"))),
frequency = 365)
ts.agu.tbl <- data %>%
select(1, 2) %>%  # select(fecha, AGUASCALIENTES)
set_names(c("date", "confirmados"))
head(ts.agu.tbl)
ts.agu.tbl %>%
plot_time_series(date, confirmados, .interactive = F)
data$fecha[1]
format(data$fecha[1], "%j")
as.numeric(format(data$fecha[1], "%j"))
as.numeric(format(data$fecha[1], "%j"))
data[1]
data[2]
